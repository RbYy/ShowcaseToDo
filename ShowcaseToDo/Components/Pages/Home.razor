@page "/"
@using Newtonsoft.Json
@using ShowCaseToDo.Models
@using ShowCaseToDo.Services
@namespace ShowCaseToDo
@inject IDialogService DialogService
@inject IJSRuntime JS
@inject IDataAccessService<Item> DataAccessService


<FluentStack Orientation="Orientation.Horizontal">
    <FluentGrid Justify="JustifyContent.FlexStart" Spacing="1" Class="w-100">
        <FluentGridItem xs="12" sm="12">
            <FluentSortableList Class="height-50" ref="sortable" Fallback="true" Items="items" OnUpdate="SortList">
                <ItemTemplate>
	                <FluentStack ref="itemElement" @onclick="() => ShowDetails(context)"
	                             class="@(ShowCaseToDo.Models.TaskStatus.CssClasses.FirstOrDefault(i => i.Status == context.Status).BackGroundClass)"
	                             Orientation="Orientation.Horizontal"
	                             style="display: flex; justify-content: space-between; align-items: center; margin: 0">

		                <FluentLabel 
		                             Style="width: 100%; margin: 0; padding: 0 5px">
			                @context.Title
		                </FluentLabel>
		                <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.Right">
			                
                            <StateButtonSet OnStatusSet="UpdateStatus" Item="@context"></StateButtonSet>

			                <div @onclick:stopPropagation="true">
			                <FluentButton
				                Appearance="Appearance.Stealth"
				                @onclick="() => RemoveItem(context)"
				                Style="border-radius: 50%; padding: 6px;"
				                IconStart="new Icons.Filled.Size16.Dismiss().WithColor(Color.Error)"
				                Title="Remove"/>
			                </div>

		                </FluentStack>
	                </FluentStack>
                </ItemTemplate>
            </FluentSortableList>
        </FluentGridItem>
    </FluentGrid>
    <FluentOverlay @bind-Visible=@overlayVisible
               Opacity="0.4"
               Alignment="Align.Center"
               Justification="JustifyContent.Center">
        <FluentProgressRing />
    </FluentOverlay>
    <FluentButton   
        Appearance="Appearance.Accent"
        @onclick="async()=>await AddItem()" 
        Style="border-radius: 50%;padding:6px;height:4.5em"
        IconStart="new Icons.Filled.Size48.Add().WithColor(Color.Lightweight)" />
</FluentStack>

